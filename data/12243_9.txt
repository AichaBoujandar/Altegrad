
   Example: Hide the collapsible element by default, the toggle element
   resides outside of it

   Input:
<div class="mw-customtoggle-myDivision" style="background:#e0e8ff">Click here to
 toggle the element</div>

<div class="mw-collapsible mw-collapsed" id="mw-customcollapsible-myDivision">
<div class="toccolours mw-collapsible-content">Lorem ipsum dolor sit amet...</di
v>
</div>

<div class="mw-customtoggle-myDivision" style="background:#e8ffe0">Clicking will
 toggle it also!</div>

   Output:
   Click here to toggle the element
   Lorem ipsum dolor sit amet...
   Clicking will toggle it also!

   For other live examples, see Test Wikipedia - Collapsing Testpage.

jquery.placeholder[edit]

   MediaWiki versions: 1.16 – 1.31
     * jquery.placeholder

   This plugin adds support for placeholder texts in input fields for
   browsers that don't support the HTML5 attribute yet. If the attribute
   is not supported it's applied to all input elements with a
   'placeholder' attribute, on-load.

   It has a built-in check for browser support, but for efficiency it's
   best to do this check (also) wrapped around to call.
// Default:
if ( !( 'placeholder' in document.createElement( 'input' ) ) ) {
        $( 'input[placeholder]' ).placeholder();
}

// Example for your dynamically added foobar fields
$( "form#foobar-ajax input[placeholder]" ).placeholder();

jquery.qunit[edit]

     * jquery.qunit

   Testing framework. See http://qunitjs.com.

jquery.qunit.completenessTest[edit]

     * jquery.qunit.completenessTest

CompletenessTest[edit]

   Assesses the completeness (coverage) of test suites for object oriented
   javascript libraries. Written to be used in environments with jQuery
   and QUnit.

   This is also used by MediaWiki core when running the QUnit test suite
   with the completenesstest option enabled.

jquery.suggestions[edit]

     * API Documentation

jquery.spinner[edit]

     * API Documentation

jquery.tabIndex[edit]

     * jquery.tabIndex

jquery.tablesorter[edit]

   MediaWiki version: ≥ 1.18
   r86088
     * jquery.tablesorter

jquery.textSelection[edit]

     * API documentation
     * jquery.textSelection

mw.util.jsMessage( 'The selected text is "' + mw.html.escape( $( '#wpTextbox1' )
.textSelection( 'getSelection' ) ) + '".' );

jquery.tipsy[edit]

   (deprecated in 1.28)
     * jquery.tipsy

   The library will be available for the forseeable future, but overlaps
   with functionality within OOUI and provides a suboptimal experience to
   mobile users. Where jQuery.tipsy is being used, we encourage developers
   to inspect OOUI and feedback on how the library might be improved to
   support the usecase that jquery.tipsy provides.

   Example page; jQuery project page
   Option Type Possible values Default Description
   gravity string / call-back function 'nw' | 'n' | 'ne' | 'w' | 'e' |
   'sw' | 's' | 'se' / $.fn.tipsy.autoNS | $.fn.tipsy.autoWE | pointer or
   anonymous 'n' sets the positioning of the tooltip relative to the
   element
   fade bool true | false true use fading effect (fadeIn / fadeOut)
   title string (an attribute) / call-back function style, class, id, ...,
   function () { return 'some string'; } title (or if not specified
   fallback-value; see below) Which string to display as a "tool-tip"?
   fallback string 'valid string' used if an element has no tooltip
   html bool true | false false interpret the tooltip text as HTML
   delayIn number in ms 0, 1, 2, ... 0 How long to wait after onmouseover
   to show the tip?
   delayOut number in ms 0, 1, 2, ... 0 How long to wait after onmouseout
   to close the tip?
   trigger string 'focus' | 'manual' | 'hover' hover When to show the
   tooltip (useful for forms)
   live bool true | false false dynamical add to selectors- see JQuery's
   live interpretation
   offset number in px 0 offset from tooltip to element
   opacity number (float) 1.0 opacity of the tooltip
mw.loader.using( 'jquery.tipsy', function () {
        $someObject.prepend(
                $( '<span>', {
                        title: 'Some tipsy test title'
                } )
                .append( 'Hover here' )
                .tipsy( {
                        option: 'value',
                        option2: 'value2'
                } )
        );
} );

jquery.mwExtension[edit]

   MediaWiki version: ≥ 1.17
   r76320
     * jquery.mwExtension

   (deprecated in 1.26)

   There are several methods added to the jQuery object for older browsers
   serving as backwards-compatibility for new native prototypes in newer
   browser. Also several other convenience functions have been created
   such as isEmpty and escapeRE. In MediaWiki 1.17 and 1.18 these methods
   were part of the "jquery.mwPrototypes" module. In MediaWiki 1.19 this
   module has been renamed to "jquery.mwExtension" (see rev:94227).

jQuery.trimLeft[edit]

   Trims whitespace from the left side of the string. Use instead:
   s.replace( /^\s+/, "" )

jQuery.trimRight[edit]

   Trims whitespace from the right of the string. Use instead: s.replace(
   /\s+$/, "" )

jQuery.ucFirst[edit]

   Returns the string with the first character capitalized. Use instead:
   s.charAt( 0 ).toUpperCase() + s.substr( 1 )

jQuery.escapeRE[edit]

   Returns a string for literal use in a regular expressions by escaping
   characters that have a special meaning in a regex. In ≥ 1.26 use
   mediawiki.RegExp instead.

jQuery.isDomElement[edit]

   Check whether a passed a variable is a direct link to an element.

jQuery.isEmpty[edit]

   MediaWiki version: ≥ 1.17
   r77127

   This function checks if a variable is empty. Supports strings,
   booleans, arrays and objects. The string "0" is considered empty. A
   string containing only whitespace (ie. " ") is considered not empty.

jQuery.compareArray[edit]

   Compares two arrays and returns a boolean for whether they are in fact
   the same

jQuery.compareObject[edit]

   MediaWiki version: ≥ 1.17
   r78345

   Compares two objects for it's properties and values (recursive).
/**
 * Trim
 */
$.trimLeft( '  foo bar  ' ); // "foo bar  ";
$.trimRight( '  foo bar  ' ); // "  foo bar";
$.trim( '  foo bar  ' ); // "foo bar";

/**
 * isEmpty
 */
$.isEmpty( 'string' ); // false
$.isEmpty( '0' ); // true
$.isEmpty( '' ); // true
$.isEmpty( [] ); // true


/**
 * compareArray
 */
$.compareArray( [1, "a", [], [2, 'b'] ], [1, 'a', [], [2, "b"] ] ); // true
$.compareArray( [1, 2], [8, 7] ); // false


/**
 * isDomElement
 */
// Sure, a plain normal dom element: True
$.isDomElement( document.getElementById( 'content' ) );

// This returns an array of dom elements, not a dom element itself: False
$.isDomElement( document.getElementsByClassName( 'portal' ) );

// This is a normal dom element: True
$.isDomElement( document.getElementsByClassName( 'portal' )[0] );

// jQuery objects are not dom elements: False
$.isDomElement( $( '#content' ) );

// jQuery.get(0) returns the raw dom element for the object: True
$.isDomElement( $( '#content' ).get(0) );

// Anything else: False
$.isDomElement( 'hello world' );

jQuery UI[edit]

     * jQuery UI

   (deprecated in 1.29) Please use OOUI instead.

   For more information on and demos for jQuery UI, refer to
   http://jqueryui.com/

   The following components are available as individual ResourceLoader
   modules:
     * jquery.ui.accordion.js
     * jquery.ui.autocomplete.js
     * jquery.ui.button.js
     * jquery.ui.core.js
     * jquery.ui.datepicker.js
     * jquery.ui.dialog.js
     * jquery.ui.draggable.js
     * jquery.ui.droppable.js
     * jquery.ui.mouse.js
     * jquery.ui.position.js
     * jquery.ui.progressbar.js
     * jquery.ui.resizable.js
     * jquery.ui.selectable.js
     * jquery.ui.slider.js
     * jquery.ui.sortable.js
     * jquery.ui.tabs.js
     * jquery.ui.widget.js

   The module name of each jQuery UI component is the script name, without
   the .js extension. For example: jquery.ui.core for the
   jquery.ui.core.js script.
     * v
     * t
     * e

   ResourceLoader
   Documentation
     * Architecture
     * Vocabulary
     * Migration guide (users)
     * Migration guide (developers)
     * Developing with ResourceLoader
     * Core modules

    1. ↑ [Wikitech-l] [BREAKING CHANGE] Deprecated JavaScript methods to
       be removed in MediaWiki 1.25, 2014-09-20, Krinkle

   Retrieved from
   "https://www.mediawiki.org/w/index.php?title=ResourceLoader/Core_module
   s&oldid=3399942#mediawiki.ui"
   Category:
     * JavaScript

   Hidden category:
     * Languages pages

Navigation menu

Personal tools

     * English
     * Not logged in
     * Talk
     * Contributions
     * Create account
     * Log in

Namespaces

     * Page
     * Discussion

   [ ]

Variants

Views

     * Read
     * Edit
     * View history

   [ ]

More

Search

   ____________________ Search Go

Navigation

     * Main page
     * Get MediaWiki
     * Get extensions
     * Tech blog
     * Contribute

Support

     * User help
     * FAQ
     * Technical manual
     * Support desk
     * Communication

Development

     * Bug tracker
     * Code repository
     * Code docs
     * Statistics

MediaWiki.org

     * Community portal
     * Recent changes
     * Translate content
     * Random page
     * Current issues
     * Sandbox

Print/export

     * Create a book
     * Download as PDF
     * Printable version

Tools

     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Cite this page

In other languages

   Add links

     * This page was last edited on 8 September 2019, at 04:18.
     * Text is available under the Creative Commons Attribution-ShareAlike
       License; additional terms may apply. See Terms of Use for details.

     * Privacy policy
     * About MediaWiki.org
     * Disclaimers
     * Code of Conduct
     * Developers
     * Cookie statement
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
